CREATE TABLE ProductDim (
    ProductID INT,
    ProductName VARCHAR(100),
    Price DECIMAL(10, 2),
    VendorName VARCHAR(100),
    CategoryName VARCHAR(100)
);
DATE_FORMAT(TransactionDate, '%Y%m%d') AS CalendarKey,
    TransactionDate AS FullDate,
    DAYNAME(TransactionDate) AS DayOfWeek,
    MONTHNAME(TransactionDate) AS Month,
    CONCAT('Q', QUARTER(TransactionDate)) AS Quarter,
    YEAR(TransactionDate) AS Year


INSERT INTO calendar (full_date, day_of_week, day_of_month, month_of_sale, quarter_of_sale, year_of_sale)
SELECT DISTINCT
    TransactionDate AS full_date,
    DAYNAME(TransactionDate) AS day_of_week,
    DAY(TransactionDate) AS day_of_month,
    MONTHNAME(TransactionDate) AS month_of_sale,
    CONCAT('Q', QUARTER(TransactionDate)) AS quarter_of_sale,
    YEAR(TransactionDate) AS year_of_sale
FROM SalesTransaction
WHERE TransactionDate IS NOT NULL;


INSERT INTO calendar (full_date, day_of_week, day_of_month, month_of_sale, quarter_of_sale, year_of_sale)
SELECT DISTINCT
    TransactionDate AS full_date,
    DATENAME(WEEKDAY, TransactionDate) AS day_of_week,
    DAY(TransactionDate) AS day_of_month,
    DATENAME(MONTH, TransactionDate) AS month_of_sale,
    'Q' + CAST(DATEPART(QUARTER, TransactionDate) AS VARCHAR) AS quarter_of_sale,
    YEAR(TransactionDate) AS year_of_sale
FROM SalesTransaction
WHERE TransactionDate IS NOT NULL;


ALTER TABLE Orders
ADD CONSTRAINT FK_CustomerID FOREIGN KEY (CustomerID) REFERENCES Customers(CustomerID);


ALTER TABLE Orders
ADD CONSTRAINT FK_CustomerID FOREIGN KEY (CustomerID) REFERENCES Customers(CustomerID);
